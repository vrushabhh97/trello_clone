#!/usr/bin/env node
var Qt=Object.defineProperty;var v=(e=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(e,{get:(t,r)=>(typeof require<"u"?require:t)[r]}):e)(function(e){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+e+'" is not supported')});var er=(e,t)=>{for(var r in t)Qt(e,r,{get:t[r],enumerable:!0})};import{Command as Wn}from"commander";import qn from"figlet";import mr from"cli-table3";import F from"chalk";import fe from"center-align";import tr from"ora";var rr=async(e,t)=>{let r=tr({color:"cyan",text:t}).start(),o=await e();return r.stop(),o},S=rr;import de from"execa";import{existsSync as or,pathExists as _e,readFileSync as nr,readJSON as ir}from"fs-extra";import sr from"globby";import je from"path";import ar from"preferred-pm";var O=()=>{if(!or("package.json"))throw new Error("./package.json not found");return JSON.parse(nr("package.json","utf8"))},A=()=>{let e=O();return Object.keys(e.dependencies||{})};var $e=()=>{let e=O();return Object.keys(e.devDependencies||{})},cr=()=>[...A(),...A()],Z=()=>O().scripts,$=async()=>{var e;try{let t=await de("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},o=Object.keys(r).filter(i=>i.startsWith("@refinedev")||i.startsWith("@pankod/refine-")),n=[];for(let i of o){let a=r[i].version;n.push({name:i,version:a})}return n}catch{return Promise.resolve(null)}},Y=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","react-hook-form","react-router-v6","react-table","remix","shared","simple-rest","strapi","strapi-v4","supabase"];try{let t=await sr("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(n=>{try{let i=v.resolve(je.join("@refinedev",n,"package.json"));return[je.dirname(i)]}catch{return[]}}),o=[];return await Promise.all([...r,...t].map(async n=>{if(await _e(`${n}/package.json`)){let a=await ir(`${n}/package.json`);o.push({name:a.name,version:a.version,path:n})}})),o}catch{return[]}},Fe=async e=>await _e(`${e}/refine.config.js`),D={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]},bun:{install:["add"],installDev:["add","--dev"],outdatedJson:["outdated","--format","json"]}},C=async()=>{let e=await S(()=>ar(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},Q=async e=>{let t=await C();try{let r=D[t.name].install,o=de(t.name,[...r,...e],{stdio:"inherit"});o.on("message",n=>{console.log(n)}),o.on("error",n=>{console.log(n)}),o.on("exit",n=>{if(n===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${n}`)})}catch(r){throw new Error(r)}},ue=async e=>{let t=await C();try{let r=D[t.name].install,o=de.sync(t.name,[...r,...e],{stdio:"inherit"});if(o.failed||o.exitCode!==0)throw new Error(o.stderr);return o}catch(r){throw new Error(r)}},Ue=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},Be=()=>{var t;let e=O();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},ee=async()=>(await Y()).some(t=>t.name==="@refinedev/devtools"),lr=e=>{let t=A();return e.filter(r=>!t.includes(r))},Me=async e=>{console.log("\u{1F331} Checking dependencies...");let t=lr(e);t.length>0?(console.log(`\u{1F331} Installing ${t.join(", ")}`),await ue(t),console.log("\u{1F389} Installation complete...")):console.log("\u{1F389} All required packages are already installed")},Le=e=>{let t=cr(),r=e.filter(o=>t.includes(o));return r.length>0?(console.log(`\u{1F6A8} This feature doesn't support ${r.join(", ")} package.`),!0):!1};var ze=e=>e.charAt(0).toUpperCase()+e.slice(1),Ve=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var X={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},We=[X.name,X.current,X.wanted,X.latest,X.changelog],te=async e=>{var a;let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let o=new mr({head:We,style:{head:["blue"]}});t.forEach(s=>{o.push(We.map(f=>{let c=s[f];if(!c)return c;if(f==="latest"||f==="wanted"){let d=qe(s.current),h=qe(c),P=pr(d,h),p=F[P.major](h.major),l=F[P.minor](h.minor),m=F[P.patch](h.patch);return`${p}.${l}.${m}`}return f==="changelog"?F.blueBright.underline(c):c}))});let n=o.toString(),i=Ve(((a=n.split(`
`))==null?void 0:a[0])||"").length;console.log(),console.log(fe("Update Available",i)),console.log(n),console.log(fe(`To update ${F.bold("`refine`")} packages with wanted version`,i)),console.log(fe(` Run the following command: ${F.yellowBright(await dr())}`,i)),console.log()},qe=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},pr=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},dr=async()=>{let e="npx @refinedev/cli update",t=A(),r=Object.keys(Z()),o=t.includes("@refinedev/cli"),n=r.includes("refine");if(!o&&!n)return e;let i=await C();return n?`${i.name} run refine update`:o?"npx refine update":e};import ur from"execa";import fr from"semver-diff";var gr=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action(hr),hr=async()=>{let e=await S(J,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await te({data:e})},J=async()=>await vr(),vr=async()=>{let e=await wr();if(!e)return[];let t=[],r;return Object.keys(e).forEach(n=>{let i=e[n];n.includes("@refinedev")&&(r=n.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:n,current:i.current,wanted:i.wanted,latest:i.latest,changelog:r}))}),t.filter(n=>!!fr(n.current,n.latest))},wr=async()=>{let e="npm",{stdout:t,timedOut:r}=await ur(e,D[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},Ye=gr;var w=(s=>(s.REACT_SCRIPT="react-scripts",s.REMIX="remix",s.NEXTJS="nextjs",s.VITE="vite",s.CRACO="craco",s.PARCEL="parcel",s.UNKNOWN="unknown",s))(w||{});var ge=(n=>(n.ANTD="antd",n.MUI="mui",n.MANTINE="mantine",n.CHAKRA="chakra-ui",n))(ge||{});var Xe=(o=>(o.NPM="npm",o.YARN="yarn",o.PNPM="pnpm",o))(Xe||{});var g=e=>{if(e)return e;let t=A(),r=$e();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},Je=()=>{let e=A();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var H=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},He=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},Ke=e=>{switch(e){case"remix":return"./app";default:return"./src"}};import U from"handlebars";import{readFileSync as yr,readdirSync as Pr,createFileSync as xr,writeFileSync as Ir,unlinkSync as Er}from"fs-extra";var Cr=(e,t)=>{let r=yr(e);return U.registerHelper("ifIn",(n,i,a)=>n.includes(i)?a.fn(U):a.inverse(U)),U.registerHelper("formatInferencerComponent",n=>{if(n)switch(n){case"chakra-ui":return"ChakraUI";default:return n.charAt(0).toUpperCase()+n.slice(1)}}),U.registerHelper("capitalize",n=>{if(n)return n.charAt(0).toUpperCase()+n.slice(1)}),U.compile(r.toString())(t)},Ge=(e,t)=>{Pr(e).forEach(o=>{let n=`${e}/${o}`,i=`${e}/${o.replace(".hbs","")}`;xr(i),Ir(i,Cr(n,t)),Er(n)})};import Rr from"execa";import{copySync as br,mkdirSync as kr,moveSync as Nr,pathExistsSync as Ze,unlinkSync as Tr}from"fs-extra";import Sr from"inquirer";import{join as Qe}from"path";import{plural as Ar}from"pluralize";import he from"temp";var re=["list","create","edit","show"],B=async(e,t)=>{var n;let r=(e==null?void 0:e.path)||H(g()).path,o=e.actions||re.join(",");if(!t.length){let{name:i,selectedActions:a}=await Sr.prompt([{type:"input",name:"name",message:"Resource Name (users, products, orders etc.)",validate:s=>s?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:re,default:(n=e==null?void 0:e.actions)==null?void 0:n.split(",")}]);t=[i],o=a.join(",")}t.forEach(i=>{let a=o?o.split(","):void 0,s=Ar(i).toLowerCase(),f=Qe(process.cwd(),r,s);if(Ze(f)){console.error(`\u274C Resource (${Qe(r,s)}) already exist!`);return}let c=ze(i),d=Je(),h=`${__dirname}/../templates/resource`,P=Or();br(h,P);let p={resourceName:i,resource:c,actions:a||re,uiFramework:d};Ge(P,p),a&&re.forEach(x=>{a.includes(x)||Tr(`${P}/${x}.tsx`)}),kr(r,{recursive:!0});let l=`${r}/${s}`,m={};Ze(l)&&(m={overwrite:!0}),Nr(P,l,m),he.cleanupSync();let u=v.resolve(".bin/jscodeshift"),{stderr:b}=Rr.sync(u,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist",`--__actions=${p.actions}`,`--__pathAlias=${H(g()).alias}`,`--__resourceFolderName=${s}`,`--__resource=${c}`,`--__resourceName=${i}`]);b&&console.log(b),console.log(`\u{1F389} Resource (${l}) generated successfully!`)})},Or=()=>(he.track(),he.mkdirSync("resource"));var Dr=e=>{let t=g(),{path:r}=H(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(jr)},jr=async(e,t)=>{B(e,t.args)},et=Dr;import*as tt from"dotenv";tt.config();var _r={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},$r=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,o]of Object.entries(_r))if(o.test(e)){t=r;break}return t},R={NODE_ENV:$r(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};import Fr from"express";import{createProxyMiddleware as ve}from"http-proxy-middleware";var Ur=e=>e.command("proxy").description("Manage proxy settings").action(Br).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",R.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",R.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",R.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",R.REFINE_PROXY_REWRITE_URL),Br=async({port:e,target:t,domain:r,rewriteUrl:o})=>{let n=Fr(),a=new URL(t).protocol==="http:"?s=>{var f;s.headers["set-cookie"]&&((f=s.headers["set-cookie"])==null||f.forEach((c,d)=>{var h;(h=s==null?void 0:s.headers)!=null&&h["set-cookie"]&&(s.headers["set-cookie"][d]=c.replace("Secure;",""))}))}:void 0;n.use("/.refine",ve({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error})})),n.use("/.auth",ve({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${o}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:a})),n.use("*",ve({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):s&&console.log(s)},warn:console.warn,debug:console.debug,error:console.error})})),n.listen(Number(e))},rt=Ur;import{Option as Hr}from"commander";import Mr from"conf";import Lr from"chalk";var ot=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var zr="refine-update-notifier",N=new Mr({projectName:zr,defaults:{key:"",lastUpdated:0,packages:[]}}),M=async()=>{if(Xr())return;let e=await Wr();if(e!==null){if(e){nt();return}Vr(),nt()}},Vr=async()=>{let e=N.get("packages");e!=null&&e.length&&(await te({data:e}),console.log(`
`))},Wr=async()=>{let e=await Yr(),t=qr();return e===null?null:!!(t||!e)},nt=async()=>{try{let e=await J();return N.set("packages",e),N.set("lastUpdated",Date.now()),N.set("key",await it()),e}catch{return N.set("packages",[]),N.set("lastUpdated",Date.now()),N.set("key",""),null}},qr=()=>{let e=N.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,o=Number(R.UPDATE_NOTIFIER_CACHE_TTL);return r>=o},Yr=async()=>{let e=N.get("key"),t=await it();return t===null?null:e===t},it=async()=>{let e=await $();if(!e)return console.error(Lr.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(o=>`${o.name}@${o.version}`);return ot(t.toString())},Xr=()=>R.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var I={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return v.resolve(`${process.cwd()}/node_modules/.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>v.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};import Jr from"execa";var T=async(e,t)=>{var o,n;if(e==="unknown"){let i=Object.values(w).filter(a=>a!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${i}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=Jr(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(o=r.stdout)==null||o.pipe(process.stdout),(n=r.stderr)==null||n.pipe(process.stderr),await r};var L=e=>{let t=g(),r=[];switch(e){case"dev":r=I[t].getDev([""]);break;case"start":r=I[t].getStart([""]);break;case"build":r=I[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},z=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var Kr=e=>e.command("start").description(L("start")).allowUnknownOption(!0).addOption(new Hr("-p, --platform <platform>",z()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(Gr),Gr=async(e,{platform:t})=>{let r=g(t),o=I[r].getBin("start"),n=I[r].getStart(e);await M(),T(o,n)},we=Kr;import{Option as dt}from"commander";import{server as to}from"@refinedev/devtools-server";import eo from"execa";import{format as Zr,resolveConfig as Qr}from"prettier";var ye=async e=>{try{let t=await Qr(process.cwd());return Zr(e,{...t??{},parser:"typescript"})}catch{return e}};var st=async()=>{let e=v.resolve(".bin/jscodeshift"),{stderr:t}=eo.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);t&&console.log(t)};var at=()=>{let t=O().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};import ro from"boxen";import oo from"cardinal";import ct from"chalk";import{Argument as no}from"commander";import io from"dedent";import xe from"semver";var so=["start","init"],ao="start",lt="4.42.0",co=e=>e.command("devtools").description("Start or install refine's devtools server; it starts on port 5001.").addArgument(new no("[command]","devtools related commands").choices(so).default(ao)).addHelpText("after",`
Commands:
    start     Start refine's devtools server
    init      Install refine's devtools client and adds it to your project
`).action(lo),lo=async e=>{switch(e){case"start":Ie();return;case"init":mo();return}},mo=async()=>{var n;let e=await Pe();if(await S(ee,"Checking if devtools is installed...")){console.log("\u{1F389} refine devtools is already installed");return}if(e&&await mt({pkg:e}))return;console.log("\u{1F331} Installing refine devtools...");let r=["@refinedev/devtools@latest"];if((!e||xe.lt(e.version,lt))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} refine core package is being updated for devtools...")),await ue(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await st(),console.log("\u2705 refine devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let i=await Pe();console.log(`\u2705 refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(i==null?void 0:i.version)??"unknown"}`),console.log(`   Changelog: ${ct.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:o}=at();if(o){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!o){let i=(n=O().scripts)==null?void 0:n.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log(ro(oo.highlight(io(`
                {
                    "scripts": {
                        "dev": "${i} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Ie=async()=>{let e=await Pe();if(e){if(await mt({pkg:e}))return;if(xe.lt(e.version,lt)){console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`);let t=await C();console.log(`\u{1F449} You can update @refinedev/core package by running "${t.name} run refine update"`);return}}to()},Pe=async()=>{let e=await Y(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},mt=async({pkg:e})=>e.name==="@pankod/refine-core"||xe.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update refine."),console.log(ct.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,pt=co;var po=e=>e.command("dev").description(L("dev")).allowUnknownOption(!0).addOption(new dt("-p, --platform <platform>",z()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new dt("-d, --devtools <devtools>","Start refine's devtools server").default("true","true if devtools is installed")).argument("[args...]").action(uo),uo=async(e,{platform:t,...r})=>{let o=g(t),n=I[o].getBin("dev"),i=I[o].getDev(e);await M();let a=await ee();(r.devtools==="false"?!1:a)&&Ie(),T(n,i)},Ee=po;import{Option as fo}from"commander";var go=e=>e.command("build").description(L("build")).allowUnknownOption(!0).addOption(new fo("-p, --platform <platform>",z()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(ho),ho=async(e,{platform:t})=>{let r=g(t),o=I[r].getBin("build"),n=I[r].getBuild(e);await M();try{await T(o,n)}catch{process.exit(1)}},Ce=go;import ut from"chalk";var vo=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(wo),wo=async e=>{let[t,...r]=e,o=Z();if(!t){console.log(`Available via ${ut.blue("`refine run`")}:
`);for(let[a,s]of Object.entries(o))console.log(`  ${a}`),console.log(`    ${ut.dim(s)}`),console.log();return}if(!Object.keys(o).includes(t)){let a=`${process.cwd()}/node_modules/.bin/${t}`;T(a,r);return}let i=await C();T(i.name,["run",t,...r])},Re=vo;import bt from"path";import W from"chalk";import ie from"inquirer";import Uo from"inquirer-autocomplete-prompt";import{ensureFile as Bo,pathExists as kt,readFile as Mo,writeFile as Lo}from"fs-extra";import Pt from"path";import Ro from"path";var be={};er(be,{PackageManagerTypes:()=>Xe,ProjectTypes:()=>w,UIFrameworks:()=>ge,appendAfterImports:()=>vt,getFileContent:()=>oe,getImports:()=>V,getNameChangeInImport:()=>gt});var yo=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,Po=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,V=e=>{let t=e.matchAll(yo),r=[];for(let o of t){let[n,i,a,s,f]=o;r.push({statement:n,importPath:f,...i&&{defaultImport:i},...a&&{namedImports:a},...s&&{namespaceImport:s}})}return r==null?void 0:r.filter(Boolean)},gt=e=>{let t=e.matchAll(Po),r=[];for(let o of t){let[n,i,a,s,f]=o;r.push({statement:n,fromName:i.trim(),toName:s.trim(),afterCharacter:f})}return r},xo=(e,t)=>{var i;let r=e.substring(0,e.indexOf(t.statement)),o=V(r).pop();return o?r.substring(r.indexOf(o==null?void 0:o.statement)+((i=o==null?void 0:o.statement)==null?void 0:i.length)):r},Io=(e,t)=>!!(t?xo(e,t):"").trim(),ft=["react","@refinedev/core","@refinedev/"],ht=e=>{var p;let t=e,r=V(e),o=r.filter(l=>!l.statement.includes("import type ")),n=r.filter(l=>l.statement.includes("import type")),i=[],a=[];o.forEach(l=>{Io(e,l)?i.push(l):a.push(l)});let s=t.indexOf((p=a==null?void 0:a[0])==null?void 0:p.statement);a.forEach(l=>{t=t.replace(l.statement,"")}),n.forEach(l=>{t=t.replace(l.statement,"")});let f=a.reduce((l,m)=>{let{importPath:u}=m;return l[u]?l[u].push(m):l[u]=[m],l},{}),h=[...Object.entries(f).map(([l,m])=>{let u=m.find(k=>k.defaultImport),b=m.find(k=>k.namespaceImport),x=m.filter(k=>k.namedImports).map(k=>(k.namedImports??"").replace(/{|}/g,"").trim().split(",").map(pe=>pe.trim()).filter(Boolean).join(", ")).join(", "),_="";return b&&(_+=`${b.statement}
`),(u||x)&&(u&&x?_+=`import ${u.defaultImport}, { ${x} } from "${m[0].importPath}";
`:u?_+=`import ${u.defaultImport} from "${m[0].importPath}";
`:_+=`import { ${x} } from "${m[0].importPath}";
`),[l,_]})].sort(([l],[m])=>{let u=ft.findIndex(x=>l.includes(x)),b=ft.findIndex(x=>m.includes(x));return u===b?l.localeCompare(m):u===-1?1:b===-1?-1:u-b}).map(([,l])=>l).join(""),P=n.map(l=>l.statement).join(`
`);return t=t.substring(0,s)+h+P+t.substring(s),t};var vt=(e,t)=>{let r=V(e),o=r[r.length-1],n=o?e.indexOf(o.statement):e.length-1;return`${e.slice(0,n+(o==null?void 0:o.statement.length))}
${t}
${e.slice(n+(o==null?void 0:o.statement.length))}`};import{readFileSync as Eo}from"fs-extra";import{join as Co}from"path";function oe(e){if(this!=null&&this.absolutePackageDir)try{return Eo(Co(this.absolutePackageDir,e)).toString()}catch{return}}var wt=v("module"),bo=wt.prototype.require,yt=(e,t)=>{wt.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...be,getFileContent:o=>oe.call({absolutePackageDir:t?e:Ro.join(process.cwd(),e)},o)}:bo.apply(this,r)}};var ke=async(e,t)=>{try{return yt(e,t),v(Pt.join(t?e:Pt.join(process.cwd(),e),"refine.config.js"))}catch{return}};import Do from"dedent";var E={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};import y from"chalk";import ko from"chalk";import No from"cardinal";import To from"boxen";var So=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,o]=t.exec(e)??[];if(o){let n=o.trim(),i=e.replace(r||"","");return{title:n,code:i}}return{code:e}},xt=e=>{let{title:t,code:r}=So(e),o="";try{o=No.highlight(r,{jsx:!0})}catch{o=r}return To(o,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?ko.bold(t):void 0})};import{marked as Ao}from"marked";import Oo from"marked-terminal";var ne=e=>Ao(e,{renderer:new Oo({code:xt})});var It=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let o=t.filter(([,c])=>Object.values(E).filter(d=>d!==E.SUCCESS).includes(c)),n="success";switch(o.length){case 0:n="success";break;case t.length:n="error";break;default:n="warning";break}let i=c=>{let d=c==null?void 0:c.replace(process.cwd(),"");return d!=null&&d.startsWith("/")?d.slice(1):d!=null&&d.startsWith("./")?d.slice(2):d},a=()=>{switch(n){case"success":console.log(y.blueBright(`Successfully swizzled ${y.bold(e)}`));return;case"warning":console.log(y.yellowBright(`Swizzle completed with errors for ${y.bold(e)}`));return;case"error":console.log(y.redBright(`Swizzle failed for ${y.bold(e)}`));return;default:return}},s=()=>{let c=[];c.push(y.dim(`File${t.length>1?"s":""} created:`)),c.push(t.map(([d,h])=>h===E.SUCCESS?y.cyanBright.dim(` - ${i(d)}`):h===E.TARGET_ALREADY_EXISTS?y.cyanBright.dim(` - ${y.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${i(d)}`):h===E.SOURCE_PATH_NOT_A_FILE?y.cyanBright.dim(` - ${y.yellowBright.bold("[SOURCE NOT FOUND] ")}${i(d)}`):y.cyanBright.dim(` - ${y.yellowBright.bold(`[${h}]`)}${i(d)}`)).join(`
`)),console.log(c.join(`
`))},f=()=>{r&&n!=="error"&&console.log(ne(Do(`
${r}`)))};console.log(""),a(),s(),console.log(""),f()};var Et=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};import zo from"boxen";var Ct=()=>{let e;try{e=g()}catch{e=void 0}return Ke(e)};import jo from"inquirer";import _o from"chalk";var Rt=async e=>{await $o(e)?await Q(e):await Fo(e)},$o=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(o=>` - ${o}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await jo.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},Fo=async e=>{let t=await C(),r=D[t.name].install.join(" "),o=e.join(" "),n=`${t.name} ${r} ${o}`;console.log(`
You can install them manually by running this command:`),console.log(_o.bold.blueBright(n))};var Vo=e=>e.command("swizzle").description(`Export a component or a function from ${W.bold("refine")} packages to customize it in your project`).action(Wo),Nt=e=>(t,r="")=>e.filter(n=>{var i;return n.label.toLowerCase().includes(r.toLowerCase())||((i=n.group)==null?void 0:i.toLowerCase().includes(r.toLowerCase()))}).flatMap((n,i,a)=>{var c;return[...(n==null?void 0:n.group)&&((c=a[i-1])==null?void 0:c.group)!==n.group&&n.group?[new ie.Separator(W.bold(n.group))]:[],{name:` ${n.label}`,value:n!=null&&n.value?n.value:n}]}),Wo=async e=>{var d,h,P;ie.registerPrompt("autocomplete",Uo);let t=await Y(),r=[];if(await Promise.all(t.map(async p=>{let l=await Fe(p.path),m=r.findIndex(u=>u.name===p.name)===-1;l&&m&&r.push(p)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${zo(`Found ${W.blueBright(r.length)} installed ${W.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let o=await Promise.all(r.map(async p=>{let l=await ke(p.path,!0)??await ke(p.path,!1)??{swizzle:{items:[]}};return{...p,config:l}})),{selectedPackage:n}=await ie.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:Nt(o.sort((p,l)=>{var m,u;return(((m=p.config)==null?void 0:m.group)??"").localeCompare(((u=l.config)==null?void 0:u.group)??"")}).map(p=>{var l,m;return{label:((l=p.config)==null?void 0:l.name)??p.name,value:p,group:(m=p.config)==null?void 0:m.group}}))}]),{swizzle:{items:i,transform:a}}=n.config,s;if(i.length===0){console.log(`No swizzle items found for ${W.bold(((d=n.config)==null?void 0:d.name)??n.name)}`);return}if(i.length===1?s=i[0]:i.length>1&&(s=(await ie.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:Nt(i.sort((l,m)=>l.group.localeCompare(m.group)))({},"")}])).selectedComponent),!s){console.log(`No swizzle items selected for ${W.bold(((h=n.config)==null?void 0:h.name)??n.name)}`);return}let f=Ct(),c=await Promise.all(s.files.map(async p=>{var l;try{let m=p.src?bt.join(n.path,p.src):void 0,u=p.dest?bt.join(process.cwd(),f,p.dest):void 0;if(!m)return console.log("No src path found for file",p),["",E.SOURCE_PATH_NOT_FOUND];if(!u)return console.log("No destination path found for file",p),["",E.TARGET_PATH_NOT_FOUND];if(!await kt(m))return[u,E.SOURCE_PATH_NOT_A_FILE];let x=await Mo(m,"utf-8");if(await kt(u))return[u,E.TARGET_ALREADY_EXISTS];await Bo(u);let k=Et(x),me=((l=p.transform)==null?void 0:l.call(p,k))??k,pe=(a==null?void 0:a(me,m,u))??me,Gt=ht(pe),Zt=await ye(Gt);return await Lo(u,Zt),[u,E.SUCCESS]}catch{return["",E.UNKNOWN_ERROR]}}));c.length>0&&(It({files:c,label:s.label,message:s.message}),(P=s==null?void 0:s.requiredPackages)!=null&&P.length&&await Rt(s.requiredPackages))},Tt=Vo;import{Option as Jo}from"commander";import K from"inquirer";import At from"semver-diff";import Ne from"chalk";var St=e=>{let t=e.filter((o,n)=>e.indexOf(o)!==n),r=new Set(t);return Array.from(r)};var Ot=async e=>{let t=Yo(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=Xo(t),o=await K.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:qo}]);return o.packages.length>0?o.packages:null},qo=e=>{let r=e.map(n=>Ue(n)).map(n=>n.name),o=St(r);return o.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${o.join(", ")}`:!0},Yo=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let o=r.current,n=At(o,r.wanted),i=At(o,r.latest);if(n===i&&i){t[i].push({name:r.name,from:o,to:r.latest});return}n&&t[n].push({name:r.name,from:o,to:r.wanted}),i&&t[i].push({name:r.name,from:o,to:r.latest})}),t},Xo=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(c=>{c.forEach(d=>{d.name.length>t&&(t=d.name.length),d.from.length>r&&(r=d.from.length)})}),t+=2;let o=[],n="Package".padEnd(t),i="From".padEnd(r),s=`
   ${n} ${i}${"To".padStart(r)}`;o.push(new K.Separator(s)),e.patch.length>0&&(o.push(new K.Separator(Ne.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(c=>{o.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})})),e.minor.length>0&&(o.push(new K.Separator(Ne.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(c=>{o.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})})),e.major.length>0&&(o.push(new K.Separator(Ne.reset.bold.blue(`
Major Updates`))),e.major.forEach(c=>{o.push({name:`${c.name.padEnd(t)} ${c.from.padStart(r)} -> ${c.to}`,value:`${c.name}@${c.to}`})}));let f=o.length+6;return{choices:o,pageSize:f}};var Ho=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new Jo("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(Ko),Ko=async e=>{let{tag:t,dryRun:r,all:o}=e,n=await S(J,"Checking for updates...");if(!(n!=null&&n.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let i=o?Go(t,n):await Ot(n);if(i){if(r){Zo(i);return}Qo(i)}},Go=(e,t)=>e==="wanted"&&t.every(n=>n.current===n.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(o=>{let n=e==="wanted"?o.wanted:e;return`${o.name}@${n}`}),Zo=async e=>{let t=await C(),r=D[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},Qo=e=>{console.log("Updating `refine` packages..."),console.log(e),Q(e)},Dt=Ho;import en from"envinfo";import tn from"ora";var rn=e=>e.command("whoami").description("View the details of the development environment").action(on),on=async()=>{let e=tn("Loading environment details...").start(),t=await en.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),o=(await $()||[]).map(n=>` - ${n.name}: ${n.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(o)},jt=rn;import ce from"chalk";import le from"inquirer";import fn from"inquirer";import nn from"execa";var se=async e=>{let{incompatiblePackages:t,integrationName:r,requiredPackages:o,transformerFileName:n}=e;if(Le(t))return;await Me(o),console.log(`\u{1F680} Setting up ${r}...`);let i=v.resolve(".bin/jscodeshift"),{stderr:a}=nn.sync(i,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/integrations/${n}.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);a&&console.log(a),console.log(`\u{1F389} ${r} setup completed!`)};import Te from"chalk";var ae=e=>{let{id:t,title:r,description:o,disabled:n}=e;return n?{value:t,name:`${Te.gray(r)}`,disabled:Te.redBright(n)}:{value:t,name:`${Te.blueBright(r)} - ${o}`}};var _t="ant-design",sn="Ant Design",an=["@remix-run/react","next"],cn=["antd","@refinedev/antd"],ln="ant-design",$t={id:_t,getChoice:e=>{let t="Ant Design",r="Setup Ant Design with Refine",o;return["nextjs","remix"].includes(e)&&(o="Automatic setup only available Vite for now. See the documentation for manual installation: https://refine.dev/docs/ui-integrations/ant-design/introduction/#installation"),ae({id:_t,title:t,description:r,disabled:o})},runTransformer:async()=>await se({incompatiblePackages:an,integrationName:sn,requiredPackages:cn,transformerFileName:ln})};var Ft="react-router",mn="React Router",pn=["@remix-run/react","next"],dn=["react-router-dom","@refinedev/react-router-v6"],un="react-router",Ut={id:Ft,getChoice:e=>{let t="React Router",r="Setup routing with React Router",o;return e==="nextjs"&&(o="Can't be used with Next.js. https://nextjs.org/docs/app/building-your-application/routing"),e==="remix"&&(o="Can't be used with Remix. https://remix.run/docs/en/main/discussion/routes"),ae({id:Ft,title:t,description:r,disabled:o})},runTransformer:async()=>await se({incompatiblePackages:pn,integrationName:mn,requiredPackages:dn,transformerFileName:un})};var j=[$t,Ut];var Se=()=>{let e=g(),t=j.map(r=>r.getChoice(e));return t.every(r=>r.disabled)?[{value:"none",name:"No integration available for this project type."},...t]:t},Bt=async()=>await fn.prompt([{type:"list",name:"id",message:"Which integration do you want to add?",choices:Se(),default:"none"}]);import Pn from"chalk";import xn from"inquirer";import{copySync as gn,mkdirSync as hn,pathExistsSync as vn}from"fs-extra";import{join as Mt}from"path";var q=[{id:"auth",title:"Auth provider",description:"Manage user authentication and authorization",fileName:"auth-provider.tsx",templateFileName:"demo-auth-provider.tsx"},{id:"live",title:"Live provider",description:"Enable real-time updates and synchronization",fileName:"live-provider.tsx",templateFileName:"demo-live-provider.tsx"},{id:"data",title:"Data provider",description:"Communicate with your API",fileName:"data-provider.tsx",templateFileName:"demo-data-provider.tsx"},{id:"access-control",title:"Access Control",description:"Manage user permissions & roles",fileName:"access-control-provider.tsx",templateFileName:"demo-access-control-provider.tsx"},{id:"notification",title:"Notification provider",description:"Display in-app alerts and messages",fileName:"notification-provider.tsx",templateFileName:"demo-notification-provider.tsx"},{id:"i18n",title:"I18n provider",description:"Support multiple languages and locales",fileName:"i18n-provider.tsx",templateFileName:"demo-i18n-provider.tsx"},{id:"audit-log",title:"Audit Log provider",description:"Display audit logs for your resources",fileName:"audit-log-provider.tsx",templateFileName:"demo-audit-log-provider.tsx"}];var wn=`${__dirname}/../templates/provider`,G=(e,t)=>{e.forEach(r=>{let{fileName:o,templateFileName:n}=yn(r),i=t??Ae(),a=Mt(i,o),s=Mt(process.cwd(),i,o);if(vn(s)){console.error(`\u274C Provider (${a}) already exist!`);return}hn(i,{recursive:!0}),gn(`${wn}/${n}`,s),console.log(`\u{1F389} Provider (${a}) created successfully!`)})},yn=e=>{let t=q.find(r=>r.id===e);if(!t)throw new Error(`Invalid provider: ${e}`);return t},Ae=()=>{let e=g(),{path:t}=He(e);return t};var Oe=()=>q.map(e=>{let{id:t,title:r,description:o}=e;return{value:t,name:`${Pn.blueBright(r)} - ${o}`}}),Lt=async()=>await xn.prompt([{type:"checkbox",name:"providers",message:"Which providers do you want to add?",choices:Oe()},{type:"input",name:"providersPath",message:"Where do you want to generate the providers?",default:Ae()}]);var zt=(e,t)=>t.map(r=>({...r,name:` . ${r.name}`,value:{group:e,component:r.value}})),Vt=async()=>await le.prompt([{type:"list",name:"component",message:"What do you want to add?",choices:[new le.Separator(ce.bold("Provider")),...zt("provider",Oe()),new le.Separator(ce.bold("Integration")),...zt("integration",Se()),new le.Separator(ce.bold("Resource")),{name:ce.blueBright(" .  Add new resource"),value:{group:"resource",component:"resource"}}],pageSize:25}]);import{Argument as In,Command as En}from"commander";var Cn=async e=>{let t=e;t||(t=(await Bt()).id);let r=j.find(o=>o.id===t);r&&await r.runTransformer()},Wt=new En("integration").addArgument(new In("[name]","Name of the integration").choices(j.map(e=>e.id))).action(Cn);import{Argument as Rn,Command as bn}from"commander";var kn=async(e,t)=>{if(!e.length){let{providers:r,providersPath:o}=await Lt();return G(r,o)}G(e,t.path)},qt=new bn("provider").addArgument(new Rn("[providers...]","Create provider(s)").choices(q.map(e=>e.id)).default([])).option("-p, --path [path]","Path to generate providers").action(kn);import{Argument as Nn,Command as Tn}from"commander";var Sn=async(e,t,r)=>{B({actions:t==null?void 0:t.actions,path:r.optsWithGlobals().path},e)},Yt=new Tn("resource").addArgument(new Nn("[resources...]","Create new resource(s)")).option("-p, --path [path]","Path to generated resource files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(Sn);var An=e=>e.command("add").description("Add new resources, providers, or integrations").allowExcessArguments(!1).action(On).addCommand(Yt).addCommand(qt).addCommand(Wt),On=async()=>{let{component:e}=await Vt();if(e.group==="provider"&&G([e.component]),e.group==="integration"){let t=j.find(r=>r.id===e.component);await(t==null?void 0:t.runTransformer())}e.group==="resource"&&await B({},[])},Xt=An;import Dn from"envinfo";import jn from"os";var _n=()=>{let e=jn.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},Jt=async()=>{let[e,t]=await Dn.helpers.getOSInfo();return{name:_n(),version:t}};import $n from"node-fetch";var Fn=async()=>{let e=await Jt();return{nodeEnv:R.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await $()||[],projectFramework:g(),projectId:Be()}},Ht=async()=>{if(R.REFINE_NO_TELEMETRY!=="true")try{let e=await Fn();await $n("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};import Un from"gray-matter";import Bn from"boxen";var Mn="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",De="---announcement",Ln=e=>e.split(De).slice(1).map(r=>`${De}${r}`),zn=e=>{let t=e.replace(De,"---"),r=Un(t),o=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:o}},Vn=async()=>{try{let e=await fetch(Mn).then(r=>r.text()).catch(()=>"");return Ln(e).map(r=>zn(r))}catch{return[]}},Kt=async()=>{let t=(await Vn()).filter(o=>!o.hidden);if(t.length===0)return;let r=t.map(o=>{let n=t.length>1?"\u2014 ":"",i=ne(o.content);return`${n}${i}`}).join("").trim();console.log(Bn(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var Yn="1.0.0",Xn=()=>{let e=new Wn;e.version(`@refinedev/cli@${Yn}`,"-v, --version","Output the current version.").description(qn.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),Tt(e),et(e),Dt(e),Ee(e),Ce(e),we(e),Re(e),Ye(e),jt(e),rt(e),pt(e),Xt(e),e.hook("preAction",async t=>{t.args.includes("dev")&&await Kt()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||Ht()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};Xn();
//# sourceMappingURL=cli.mjs.map