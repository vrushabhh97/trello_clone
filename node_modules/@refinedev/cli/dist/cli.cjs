#!/usr/bin/env node
var eo=Object.create;var Ne=Object.defineProperty;var to=Object.getOwnPropertyDescriptor;var ro=Object.getOwnPropertyNames;var oo=Object.getPrototypeOf,no=Object.prototype.hasOwnProperty;var io=(e,t)=>{for(var r in t)Ne(e,r,{get:t[r],enumerable:!0})},so=(e,t,r,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of ro(t))!no.call(e,n)&&n!==r&&Ne(e,n,{get:()=>t[n],enumerable:!(o=to(t,n))||o.enumerable});return e};var a=(e,t,r)=>(r=e!=null?eo(oo(e)):{},so(t||!e||!e.__esModule?Ne(r,"default",{value:e,enumerable:!0}):r,e));var Kr=require("commander"),Gr=a(require("figlet"));var dt=a(require("cli-table3")),U=a(require("chalk")),me=a(require("center-align"));var Qe=a(require("ora")),ao=async(e,t)=>{let r=(0,Qe.default)({color:"cyan",text:t}).start(),o=await e();return r.stop(),o},j=ao;var se=a(require("execa")),S=require("fs-extra"),et=a(require("globby")),Te=a(require("path")),tt=a(require("preferred-pm")),$=()=>{if(!(0,S.existsSync)("package.json"))throw new Error("./package.json not found");return JSON.parse((0,S.readFileSync)("package.json","utf8"))},_=()=>{let e=$();return Object.keys(e.dependencies||{})};var rt=()=>{let e=$();return Object.keys(e.devDependencies||{})},co=()=>[..._(),..._()],ae=()=>$().scripts,V=async()=>{var e;try{let t=await(0,se.default)("npm",["ls","--depth=0","--json"],{reject:!1}),r=((e=JSON.parse(t.stdout))==null?void 0:e.dependencies)||{},o=Object.keys(r).filter(i=>i.startsWith("@refinedev")||i.startsWith("@pankod/refine-")),n=[];for(let i of o){let c=r[i].version;n.push({name:i,version:c})}return n}catch{return Promise.resolve(null)}},Z=async()=>{let e=["ably","airtable","antd","appwrite","chakra-ui","codemod","core","devtools","devtools-internal","devtools-server","devtools-shared","devtools-ui","graphql","hasura","inferencer","kbar","mantine","medusa","mui","nestjs-query","nestjsx-crud","nextjs-router","react-hook-form","react-router-v6","react-table","remix","shared","simple-rest","strapi","strapi-v4","supabase"];try{let t=await(0,et.default)("node_modules/@refinedev/*",{onlyDirectories:!0}),r=e.flatMap(n=>{try{let i=require.resolve(Te.default.join("@refinedev",n,"package.json"));return[Te.default.dirname(i)]}catch{return[]}}),o=[];return await Promise.all([...r,...t].map(async n=>{if(await(0,S.pathExists)(`${n}/package.json`)){let c=await(0,S.readJSON)(`${n}/package.json`);o.push({name:c.name,version:c.version,path:n})}})),o}catch{return[]}},ot=async e=>await(0,S.pathExists)(`${e}/refine.config.js`),F={npm:{install:["install","--save"],installDev:["install","--save-dev"],outdatedJson:["outdated","--json"]},yarn:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--json"]},pnpm:{install:["add"],installDev:["add","-D"],outdatedJson:["outdated","--format","json"]},bun:{install:["add"],installDev:["add","--dev"],outdatedJson:["outdated","--format","json"]}},C=async()=>{let e=await j(()=>(0,tt.default)(process.cwd()),"Getting package manager...");if(!e)throw new Error("Package manager not found.");return e},ce=async e=>{let t=await C();try{let r=F[t.name].install,o=(0,se.default)(t.name,[...r,...e],{stdio:"inherit"});o.on("message",n=>{console.log(n)}),o.on("error",n=>{console.log(n)}),o.on("exit",n=>{if(n===0){console.log("All `refine` packages updated  \u{1F389}");return}console.log(`Application exited with code ${n}`)})}catch(r){throw new Error(r)}},Se=async e=>{let t=await C();try{let r=F[t.name].install,o=se.default.sync(t.name,[...r,...e],{stdio:"inherit"});if(o.failed||o.exitCode!==0)throw new Error(o.stderr);return o}catch(r){throw new Error(r)}},nt=e=>{let t=e.lastIndexOf("@");return t<=0?{name:e,version:null}:{name:e.slice(0,t),version:e.slice(t+1)}},it=()=>{var t;let e=$();return(t=e==null?void 0:e.refine)==null?void 0:t.projectId},le=async()=>(await Z()).some(t=>t.name==="@refinedev/devtools"),lo=e=>{let t=_();return e.filter(r=>!t.includes(r))},st=async e=>{console.log("\u{1F331} Checking dependencies...");let t=lo(e);t.length>0?(console.log(`\u{1F331} Installing ${t.join(", ")}`),await Se(t),console.log("\u{1F389} Installation complete...")):console.log("\u{1F389} All required packages are already installed")},at=e=>{let t=co(),r=e.filter(o=>t.includes(o));return r.length>0?(console.log(`\u{1F6A8} This feature doesn't support ${r.join(", ")} package.`),!0):!1};var ct=e=>e.charAt(0).toUpperCase()+e.slice(1),lt=e=>e.replace(/[\u001b\u009b][[()#;?]*(?:[0-9]{1,4}(?:;[0-9]{0,4})*)?[0-9A-ORZcf-nqry=><]/g,"");var Q={name:"name",current:"current",wanted:"wanted",latest:"latest",changelog:"changelog"},mt=[Q.name,Q.current,Q.wanted,Q.latest,Q.changelog],pe=async e=>{var c;let t=e==null?void 0:e.data,r=Object.keys((t==null?void 0:t[0])||{});if(!t||!r.length)return;let o=new dt.default({head:mt,style:{head:["blue"]}});t.forEach(s=>{o.push(mt.map(g=>{let l=s[g];if(!l)return l;if(g==="latest"||g==="wanted"){let u=pt(s.current),v=pt(l),P=mo(u,v),d=U.default[P.major](v.major),m=U.default[P.minor](v.minor),p=U.default[P.patch](v.patch);return`${d}.${m}.${p}`}return g==="changelog"?U.default.blueBright.underline(l):l}))});let n=o.toString(),i=lt(((c=n.split(`
`))==null?void 0:c[0])||"").length;console.log(),console.log((0,me.default)("Update Available",i)),console.log(n),console.log((0,me.default)(`To update ${U.default.bold("`refine`")} packages with wanted version`,i)),console.log((0,me.default)(` Run the following command: ${U.default.yellowBright(await po())}`,i)),console.log()},pt=e=>{let t=e.split(".");return{major:t[0],minor:t[1],patch:t[2]}},mo=(e,t)=>e.major.trim()!==t.major.trim()?{major:"red",minor:"red",patch:"red"}:e.minor.trim()!==t.minor.trim()?{major:"white",minor:"yellow",patch:"yellow"}:e.patch.trim()!==t.patch.trim()?{major:"white",minor:"white",patch:"green"}:{major:"white",minor:"white",patch:"white"},po=async()=>{let e="npx @refinedev/cli update",t=_(),r=Object.keys(ae()),o=t.includes("@refinedev/cli"),n=r.includes("refine");if(!o&&!n)return e;let i=await C();return n?`${i.name} run refine update`:o?"npx refine update":e};var ut=a(require("execa"));var ft=a(require("semver-diff")),uo=e=>e.command("check-updates").description("Check all installed `refine` packages are up to date").action(fo),fo=async()=>{let e=await j(ee,"Checking for updates...");if(!e.length){console.log("All `refine` packages are up to date \u{1F389}\n");return}await pe({data:e})},ee=async()=>await go(),go=async()=>{let e=await ho();if(!e)return[];let t=[],r;return Object.keys(e).forEach(n=>{let i=e[n];n.includes("@refinedev")&&(r=n.replace(/@refinedev\//,"https://c.refine.dev/"),t.push({name:n,current:i.current,wanted:i.wanted,latest:i.latest,changelog:r}))}),t.filter(n=>!!(0,ft.default)(n.current,n.latest))},ho=async()=>{let e="npm",{stdout:t,timedOut:r}=await(0,ut.default)(e,F[e].outdatedJson,{reject:!1,timeout:25e3});if(r)throw new Error("Timed out while checking for updates.");return t?JSON.parse(t):null},gt=uo;var w=(s=>(s.REACT_SCRIPT="react-scripts",s.REMIX="remix",s.NEXTJS="nextjs",s.VITE="vite",s.CRACO="craco",s.PARCEL="parcel",s.UNKNOWN="unknown",s))(w||{});var Ae=(n=>(n.ANTD="antd",n.MUI="mui",n.MANTINE="mantine",n.CHAKRA="chakra-ui",n))(Ae||{});var ht=(o=>(o.NPM="npm",o.YARN="yarn",o.PNPM="pnpm",o))(ht||{});var h=e=>{if(e)return e;let t=_(),r=rt();return t.includes("@craco/craco")||r.includes("@craco/craco")?"craco":t.includes("react-scripts")||r.includes("react-scripts")?"react-scripts":t.includes("next")||r.includes("next")?"nextjs":t.includes("@remix-run/react")||r.includes("@remix-run/react")?"remix":t.includes("vite")||r.includes("vite")?"vite":t.includes("parcel")||r.includes("parcel")?"parcel":"unknown"},vt=()=>{let e=_();if(e.includes("@refinedev/antd"))return"antd";if(e.includes("@refinedev/mui"))return"mui";if(e.includes("@refinedev/chakra-ui"))return"chakra-ui";if(e.includes("@refinedev/mantine"))return"mantine"};var te=e=>{switch(e){case"nextjs":return{path:"src/components",alias:"../src/components"};case"remix":return{path:"app/components",alias:"~/components"}}return{path:"src/pages",alias:"pages"}},wt=e=>{switch(e){case"nextjs":return{path:"src/providers",alias:"../src/providers"};case"remix":return{path:"app/providers",alias:"~/providers"}}return{path:"src/providers",alias:"providers"}},yt=e=>{switch(e){case"remix":return"./app";default:return"./src"}};var B=a(require("handlebars")),T=require("fs-extra"),vo=(e,t)=>{let r=(0,T.readFileSync)(e);return B.default.registerHelper("ifIn",(n,i,c)=>n.includes(i)?c.fn(B.default):c.inverse(B.default)),B.default.registerHelper("formatInferencerComponent",n=>{if(n)switch(n){case"chakra-ui":return"ChakraUI";default:return n.charAt(0).toUpperCase()+n.slice(1)}}),B.default.registerHelper("capitalize",n=>{if(n)return n.charAt(0).toUpperCase()+n.slice(1)}),B.default.compile(r.toString())(t)},Pt=(e,t)=>{(0,T.readdirSync)(e).forEach(o=>{let n=`${e}/${o}`,i=`${e}/${o.replace(".hbs","")}`;(0,T.createFileSync)(i),(0,T.writeFileSync)(i,vo(n,t)),(0,T.unlinkSync)(n)})};var xt=a(require("execa")),R=require("fs-extra"),It=a(require("inquirer")),Oe=require("path"),Et=require("pluralize"),ue=a(require("temp")),de=["list","create","edit","show"],W=async(e,t)=>{var n;let r=(e==null?void 0:e.path)||te(h()).path,o=e.actions||de.join(",");if(!t.length){let{name:i,selectedActions:c}=await It.default.prompt([{type:"input",name:"name",message:"Resource Name (users, products, orders etc.)",validate:s=>s?!0:"Resource Name is required"},{type:"checkbox",name:"selectedActions",message:"Select Actions",choices:de,default:(n=e==null?void 0:e.actions)==null?void 0:n.split(",")}]);t=[i],o=c.join(",")}t.forEach(i=>{let c=o?o.split(","):void 0,s=(0,Et.plural)(i).toLowerCase(),g=(0,Oe.join)(process.cwd(),r,s);if((0,R.pathExistsSync)(g)){console.error(`\u274C Resource (${(0,Oe.join)(r,s)}) already exist!`);return}let l=ct(i),u=vt(),v=`${__dirname}/../templates/resource`,P=wo();(0,R.copySync)(v,P);let d={resourceName:i,resource:l,actions:c||de,uiFramework:u};Pt(P,d),c&&de.forEach(x=>{c.includes(x)||(0,R.unlinkSync)(`${P}/${x}.tsx`)}),(0,R.mkdirSync)(r,{recursive:!0});let m=`${r}/${s}`,p={};(0,R.pathExistsSync)(m)&&(p={overwrite:!0}),(0,R.moveSync)(P,m,p),ue.default.cleanupSync();let f=require.resolve(".bin/jscodeshift"),{stderr:k}=xt.default.sync(f,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/resource.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist",`--__actions=${d.actions}`,`--__pathAlias=${te(h()).alias}`,`--__resourceFolderName=${s}`,`--__resource=${l}`,`--__resourceName=${i}`]);k&&console.log(k),console.log(`\u{1F389} Resource (${m}) generated successfully!`)})},wo=()=>(ue.default.track(),ue.default.mkdirSync("resource"));var yo=e=>{let t=h(),{path:r}=te(t);return e.command("create-resource").allowExcessArguments(!0).description('Create a new resource files (deprecated, please use "add resource" command)').option("-a, --actions [actions]","Only generate the specified actions. (ex: list,create,edit,show)","list,create,edit,show").option("-p, --path [path]","Path to generate the resource files",r).action(Po)},Po=async(e,t)=>{W(e,t.args)},Ct=yo;var Rt=a(require("dotenv"));Rt.config();var xo={development:/dev/i,production:/prod/i,test:/test|tst/i,"continuous-integration":/ci/i,"user-acceptance-testing":/uat/i,"system-integration-testing":/sit/i},Io=()=>{let e=process.env.NODE_ENV;if(!e)return"development";let t="custom";for(let[r,o]of Object.entries(xo))if(o.test(e)){t=r;break}return t},b={NODE_ENV:Io(),REFINE_NO_TELEMETRY:process.env.REFINE_NO_TELEMETRY||"false",UPDATE_NOTIFIER_IS_DISABLED:process.env.UPDATE_NOTIFIER_IS_DISABLED||"false",UPDATE_NOTIFIER_CACHE_TTL:process.env.UPDATE_NOTIFIER_CACHE_TTL||1e3*60*60*24,REFINE_PROXY_DOMAIN:process.env.REFINE_PROXY_DOMAIN||"https://refine.dev",REFINE_PROXY_TARGET:process.env.REFINE_PROXY_TARGET||"http://localhost:3000",REFINE_PROXY_PORT:process.env.REFINE_PROXY_PORT||"7313",REFINE_PROXY_REWRITE_URL:process.env.REFINE_REWRITE_URL||"http://localhost:7313"};var bt=a(require("express")),fe=require("http-proxy-middleware"),Eo=e=>e.command("proxy").description("Manage proxy settings").action(Co).option("-p, --port [port]","Port to serve the proxy server. You can also set this with the `REFINE_PROXY_PORT` environment variable.",b.REFINE_PROXY_PORT).option("-t, --target [target]","Target to proxy. You can also set this with the `REFINE_PROXY_TARGET` environment variable.",b.REFINE_PROXY_TARGET).option("-d, --domain [domain]","Domain to proxy. You can also set this with the `REFINE_PROXY_DOMAIN` environment variable.",b.REFINE_PROXY_DOMAIN).option("-r, --rewrite-url [rewrite URL]","Rewrite URL for redirects. You can also set this with the `REFINE_PROXY_REWRITE_URL` environment variable.",b.REFINE_PROXY_REWRITE_URL),Co=async({port:e,target:t,domain:r,rewriteUrl:o})=>{let n=(0,bt.default)(),c=new URL(t).protocol==="http:"?s=>{var g;s.headers["set-cookie"]&&((g=s.headers["set-cookie"])==null||g.forEach((l,u)=>{var v;(v=s==null?void 0:s.headers)!=null&&v["set-cookie"]&&(s.headers["set-cookie"][u]=l.replace("Secure;",""))}))}:void 0;n.use("/.refine",(0,fe.createProxyMiddleware)({target:`${r}/.refine`,changeOrigin:!0,pathRewrite:{"^/.refine":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.refine to ${r}/.refine`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error})})),n.use("/.auth",(0,fe.createProxyMiddleware)({target:`${r}/.auth`,changeOrigin:!0,cookieDomainRewrite:{"refine.dev":""},headers:{"auth-base-url-rewrite":`${o}/.auth`},pathRewrite:{"^/.auth":""},logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy rewrite rule created")||(`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e}/.auth to ${r}/.auth`):s&&console.log(s))},warn:console.warn,debug:console.debug,error:console.error}),onProxyRes:c})),n.use("*",(0,fe.createProxyMiddleware)({target:`${t}`,changeOrigin:!0,ws:!0,logProvider:()=>({log:console.log,info:s=>{`${s}`.includes("Proxy created")?console.log(`Proxying localhost:${e} to ${t}`):s&&console.log(s)},warn:console.warn,debug:console.debug,error:console.error})})),n.listen(Number(e))},kt=Eo;var jt=require("commander");var St=a(require("conf")),At=a(require("chalk"));var Nt=e=>typeof btoa<"u"?btoa(e):Buffer.from(e).toString("base64");var Ro="refine-update-notifier",A=new St.default({projectName:Ro,defaults:{key:"",lastUpdated:0,packages:[]}}),q=async()=>{if(So())return;let e=await ko();if(e!==null){if(e){Tt();return}bo(),Tt()}},bo=async()=>{let e=A.get("packages");e!=null&&e.length&&(await pe({data:e}),console.log(`
`))},ko=async()=>{let e=await To(),t=No();return e===null?null:!!(t||!e)},Tt=async()=>{try{let e=await ee();return A.set("packages",e),A.set("lastUpdated",Date.now()),A.set("key",await Ot()),e}catch{return A.set("packages",[]),A.set("lastUpdated",Date.now()),A.set("key",""),null}},No=()=>{let e=A.get("lastUpdated");if(!e)return!0;let r=Date.now()-e,o=Number(b.UPDATE_NOTIFIER_CACHE_TTL);return r>=o},To=async()=>{let e=A.get("key"),t=await Ot();return t===null?null:e===t},Ot=async()=>{let e=await V();if(!e)return console.error(At.default.red("Something went wrong when trying to get installed `refine` packages.")),null;let t=e.map(o=>`${o.name}@${o.version}`);return Nt(t.toString())},So=()=>b.UPDATE_NOTIFIER_IS_DISABLED.toLocaleLowerCase()==="true";var I={["react-scripts"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/react-scripts")},["vite"]:{getDev:e=>["dev",...e],getStart:e=>["preview",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/vite")},["nextjs"]:{getDev:e=>["dev",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/next")},["remix"]:{getDev:e=>["dev",...e],getStart:e=>(e==null?void 0:e.length)?e:(console.log(),console.warn("\u{1F6A8} Remix requires a path to the entry file. Please provide it as an argument to `refine start` command in package.json scripts"),console.warn("Refine will use `./build/index.js` as default"),console.warn("Example: `refine start ./build/index.js`"),console.log(),["./build/index.js"]),getBuild:e=>["build",...e],getBin:e=>{let t=e==="start"?"remix-serve":"remix";return require.resolve(`${process.cwd()}/node_modules/.bin/${t}`)}},["craco"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/craco")},["parcel"]:{getDev:e=>["start",...e],getStart:e=>["start",...e],getBuild:e=>["build",...e],getBin:()=>require.resolve(".bin/parcel")},["unknown"]:{getDev:e=>[...e],getStart:e=>[...e],getBuild:e=>[...e],getBin:()=>"unknown"}};var Dt=a(require("execa")),O=async(e,t)=>{var o,n;if(e==="unknown"){let i=Object.values(w).filter(c=>c!=="unknown").join(", ");console.error(`We couldn't find executable for your project. Supported executables are ${i}.
Please use your own script directly. If you think this is an issue, please report it at: https://github.com/refinedev/refine/issues`);return}let r=(0,Dt.default)(e,t,{stdio:"pipe",windowsHide:!1,env:{FORCE_COLOR:"true",...process.env}});return(o=r.stdout)==null||o.pipe(process.stdout),(n=r.stderr)==null||n.pipe(process.stderr),await r};var Y=e=>{let t=h(),r=[];switch(e){case"dev":r=I[t].getDev([""]);break;case"start":r=I[t].getStart([""]);break;case"build":r=I[t].getBuild([""]);break}return t==="remix"&&e==="start"&&(t="remix-serve"),`It runs: \`${t} ${r.join(" ")}\`. Also accepts all the arguments \`${t}\` accepts.`},X=()=>`Platform to run command on. 
ex: ${Object.values(w).join(", ")}`;var Ao=e=>e.command("start").description(Y("start")).allowUnknownOption(!0).addOption(new jt.Option("-p, --platform <platform>",X()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(Oo),Oo=async(e,{platform:t})=>{let r=h(t),o=I[r].getBin("start"),n=I[r].getStart(e);await q(),O(o,n)},De=Ao;var Ue=require("commander");var Ut=require("@refinedev/devtools-server");var _t=a(require("execa"));var ge=require("prettier"),je=async e=>{try{let t=await(0,ge.resolveConfig)(process.cwd());return(0,ge.format)(e,{...t??{},parser:"typescript"})}catch{return e}};var $t=async()=>{let e=require.resolve(".bin/jscodeshift"),{stderr:t}=_t.default.sync(e,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/add-devtools-component.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);t&&console.log(t)};var Ft=()=>{let t=$().scripts||{};return{dev:((t==null?void 0:t.dev)||"").match(/refine dev(\s|$|;){1}/)!==null}};var Bt=a(require("boxen")),Mt=a(require("cardinal")),$e=a(require("chalk")),Lt=require("commander"),zt=a(require("dedent")),he=a(require("semver")),Do=["start","init"],jo="start",Vt="4.42.0",_o=e=>e.command("devtools").description("Start or install refine's devtools server; it starts on port 5001.").addArgument(new Lt.Argument("[command]","devtools related commands").choices(Do).default(jo)).addHelpText("after",`
Commands:
    start     Start refine's devtools server
    init      Install refine's devtools client and adds it to your project
`).action($o),$o=async e=>{switch(e){case"start":Fe();return;case"init":Fo();return}},Fo=async()=>{var n;let e=await _e();if(await j(le,"Checking if devtools is installed...")){console.log("\u{1F389} refine devtools is already installed");return}if(e&&await Wt({pkg:e}))return;console.log("\u{1F331} Installing refine devtools...");let r=["@refinedev/devtools@latest"];if((!e||he.default.lt(e.version,Vt))&&(r.push("@refinedev/core@latest"),console.log("\u{1F331} refine core package is being updated for devtools...")),await Se(r),console.log(""),console.log(""),console.log("\u{1F331} Adding devtools component to your project...."),await $t(),console.log("\u2705 refine devtools package and components added to your project"),r.includes("@refinedev/core@latest")){let i=await _e();console.log(`\u2705 refine core package updated from ${(e==null?void 0:e.version)??"unknown"} to ${(i==null?void 0:i.version)??"unknown"}`),console.log(`   Changelog: ${$e.default.underline.blueBright(`https://c.refine.dev/core#${(e==null?void 0:e.version.replaceAll(".",""))??""}`)}`)}console.log("");let{dev:o}=Ft();if(o){console.log(`\u{1F64C} You're good to go. "npm run dev" will automatically starts the devtools server.`),console.log('\u{1F449} You can also start the devtools server manually by running "refine devtools start"');return}if(!o){let i=(n=$().scripts)==null?void 0:n.dev;console.log('\u{1F6A8} Your have modified the "dev" script in your package.json. Because of that, "npm run dev" will not start the devtools server automatically.'),console.log('\u{1F449} You can append "refine devtools" to "dev" script'),console.log('\u{1F449} You can start the devtools server manually by running "refine devtools"'),console.log(""),console.log((0,Bt.default)(Mt.default.highlight((0,zt.default)(`
                {
                    "scripts": {
                        "dev": "${i} & refine devtools",
                        "refine": "refine"
                    }
                }  
        `)),{padding:1,title:"package.json",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"}))}},Fe=async()=>{let e=await _e();if(e){if(await Wt({pkg:e}))return;if(he.default.lt(e.version,Vt)){console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`);let t=await C();console.log(`\u{1F449} You can update @refinedev/core package by running "${t.name} run refine update"`);return}}(0,Ut.server)()},_e=async()=>{let e=await Z(),t=e==null?void 0:e.find(r=>r.name==="@refinedev/core"||r.name==="@pankod/refine-core");if(t)return t},Wt=async({pkg:e})=>e.name==="@pankod/refine-core"||he.default.lt(e.version,"4.0.0")?(console.log(`\u{1F6A8} You're using an old version of refine(${e.version}). refine version should be @4.42.0 or higher to use devtools.`),console.log("You can follow migration guide to update refine."),console.log($e.default.blue("https://refine.dev/docs/migration-guide/3x-to-4x/")),!0):!1,qt=_o;var Uo=e=>e.command("dev").description(Y("dev")).allowUnknownOption(!0).addOption(new Ue.Option("-p, --platform <platform>",X()).choices(Object.values(w).filter(t=>t!=="unknown"))).addOption(new Ue.Option("-d, --devtools <devtools>","Start refine's devtools server").default("true","true if devtools is installed")).argument("[args...]").action(Bo),Bo=async(e,{platform:t,...r})=>{let o=h(t),n=I[o].getBin("dev"),i=I[o].getDev(e);await q();let c=await le();(r.devtools==="false"?!1:c)&&Fe(),O(n,i)},Be=Uo;var Yt=require("commander");var Mo=e=>e.command("build").description(Y("build")).allowUnknownOption(!0).addOption(new Yt.Option("-p, --platform <platform>",X()).choices(Object.values(w).filter(t=>t!=="unknown"))).argument("[args...]").action(Lo),Lo=async(e,{platform:t})=>{let r=h(t),o=I[r].getBin("build"),n=I[r].getBuild(e);await q();try{await O(o,n)}catch{process.exit(1)}},Me=Mo;var Le=a(require("chalk"));var zo=e=>e.command("run").description("Runs a defined package script. If no `command` is provided, it will list the available scripts").allowUnknownOption(!0).argument("[command] [args...]").action(Vo),Vo=async e=>{let[t,...r]=e,o=ae();if(!t){console.log(`Available via ${Le.default.blue("`refine run`")}:
`);for(let[c,s]of Object.entries(o))console.log(`  ${c}`),console.log(`    ${Le.default.dim(s)}`),console.log();return}if(!Object.keys(o).includes(t)){let c=`${process.cwd()}/node_modules/.bin/${t}`;O(c,r);return}let i=await C();O(i.name,["run",t,...r])},ze=zo;var Ye=a(require("path")),M=a(require("chalk")),re=a(require("inquirer")),hr=a(require("inquirer-autocomplete-prompt")),D=require("fs-extra");var We=a(require("path"));var Qt=a(require("path"));var Ve={};io(Ve,{PackageManagerTypes:()=>ht,ProjectTypes:()=>w,UIFrameworks:()=>Ae,appendAfterImports:()=>Kt,getFileContent:()=>ve,getImports:()=>J,getNameChangeInImport:()=>Jt});var Wo=/import(?:(?:(?:[ \n\t]+([^ *\n\t\{\},]+)[ \n\t]*(?:,|[ \n\t]+))?([ \n\t]*\{(?:[ \n\t]*[^ \n\t"'\{\}]+[ \n\t]*,?)+\})?[ \n\t]*)|[ \n\t]*\*[ \n\t]*as[ \n\t]+([^ \n\t\{\}]+)[ \n\t]+)from[ \n\t]*(?:['"])([^'"\n]+)(?:['"])(?:;?)/g,qo=/((?:\w|\s|_)*)( as )((?:\w|\s|_)*)( |,)?/g,J=e=>{let t=e.matchAll(Wo),r=[];for(let o of t){let[n,i,c,s,g]=o;r.push({statement:n,importPath:g,...i&&{defaultImport:i},...c&&{namedImports:c},...s&&{namespaceImport:s}})}return r==null?void 0:r.filter(Boolean)},Jt=e=>{let t=e.matchAll(qo),r=[];for(let o of t){let[n,i,c,s,g]=o;r.push({statement:n,fromName:i.trim(),toName:s.trim(),afterCharacter:g})}return r},Yo=(e,t)=>{var i;let r=e.substring(0,e.indexOf(t.statement)),o=J(r).pop();return o?r.substring(r.indexOf(o==null?void 0:o.statement)+((i=o==null?void 0:o.statement)==null?void 0:i.length)):r},Xo=(e,t)=>!!(t?Yo(e,t):"").trim(),Xt=["react","@refinedev/core","@refinedev/"],Ht=e=>{var d;let t=e,r=J(e),o=r.filter(m=>!m.statement.includes("import type ")),n=r.filter(m=>m.statement.includes("import type")),i=[],c=[];o.forEach(m=>{Xo(e,m)?i.push(m):c.push(m)});let s=t.indexOf((d=c==null?void 0:c[0])==null?void 0:d.statement);c.forEach(m=>{t=t.replace(m.statement,"")}),n.forEach(m=>{t=t.replace(m.statement,"")});let g=c.reduce((m,p)=>{let{importPath:f}=p;return m[f]?m[f].push(p):m[f]=[p],m},{}),v=[...Object.entries(g).map(([m,p])=>{let f=p.find(N=>N.defaultImport),k=p.find(N=>N.namespaceImport),x=p.filter(N=>N.namedImports).map(N=>(N.namedImports??"").replace(/{|}/g,"").trim().split(",").map(ke=>ke.trim()).filter(Boolean).join(", ")).join(", "),z="";return k&&(z+=`${k.statement}
`),(f||x)&&(f&&x?z+=`import ${f.defaultImport}, { ${x} } from "${p[0].importPath}";
`:f?z+=`import ${f.defaultImport} from "${p[0].importPath}";
`:z+=`import { ${x} } from "${p[0].importPath}";
`),[m,z]})].sort(([m],[p])=>{let f=Xt.findIndex(x=>m.includes(x)),k=Xt.findIndex(x=>p.includes(x));return f===k?m.localeCompare(p):f===-1?1:k===-1?-1:f-k}).map(([,m])=>m).join(""),P=n.map(m=>m.statement).join(`
`);return t=t.substring(0,s)+v+P+t.substring(s),t};var Kt=(e,t)=>{let r=J(e),o=r[r.length-1],n=o?e.indexOf(o.statement):e.length-1;return`${e.slice(0,n+(o==null?void 0:o.statement.length))}
${t}
${e.slice(n+(o==null?void 0:o.statement.length))}`};var Gt=require("fs-extra"),Zt=require("path");function ve(e){if(this!=null&&this.absolutePackageDir)try{return(0,Gt.readFileSync)((0,Zt.join)(this.absolutePackageDir,e)).toString()}catch{return}}var er=require("module"),Jo=er.prototype.require,tr=(e,t)=>{er.prototype.require=function(...r){return r[0]==="@refinedev/cli"?{...Ve,getFileContent:o=>ve.call({absolutePackageDir:t?e:Qt.default.join(process.cwd(),e)},o)}:Jo.apply(this,r)}};var qe=async(e,t)=>{try{return tr(e,t),require(We.default.join(t?e:We.default.join(process.cwd(),e),"refine.config.js"))}catch{return}};var cr=a(require("dedent"));var E={SUCCESS:"SUCCESS",UNKNOWN_ERROR:"UNKNOWN_ERROR",SOURCE_PATH_NOT_FOUND:"SOURCE_PATH_NOT_FOUND",TARGET_PATH_NOT_FOUND:"TARGET_PATH_NOT_FOUND",SOURCE_PATH_NOT_A_FILE:"SOURCE_PATH_NOT_A_FILE",TARGET_ALREADY_EXISTS:"TARGET_ALREADY_EXISTS"};var y=a(require("chalk"));var rr=a(require("chalk")),or=a(require("cardinal")),nr=a(require("boxen")),Ho=e=>{let t=/^(?:\/\/\s?title:\s?)(.*?)\n/g,[r,o]=t.exec(e)??[];if(o){let n=o.trim(),i=e.replace(r||"","");return{title:n,code:i}}return{code:e}},ir=e=>{let{title:t,code:r}=Ho(e),o="";try{o=or.default.highlight(r,{jsx:!0})}catch{o=r}return(0,nr.default)(o,{padding:1,margin:0,borderStyle:"round",borderColor:"gray",titleAlignment:"left",title:t?rr.default.bold(t):void 0})};var sr=require("marked"),ar=a(require("marked-terminal")),we=e=>(0,sr.marked)(e,{renderer:new ar.default({code:ir})});var lr=({label:e,files:t,message:r="**`Warning:`** You should use the component where you want to use it."})=>{let o=t.filter(([,l])=>Object.values(E).filter(u=>u!==E.SUCCESS).includes(l)),n="success";switch(o.length){case 0:n="success";break;case t.length:n="error";break;default:n="warning";break}let i=l=>{let u=l==null?void 0:l.replace(process.cwd(),"");return u!=null&&u.startsWith("/")?u.slice(1):u!=null&&u.startsWith("./")?u.slice(2):u},c=()=>{switch(n){case"success":console.log(y.default.blueBright(`Successfully swizzled ${y.default.bold(e)}`));return;case"warning":console.log(y.default.yellowBright(`Swizzle completed with errors for ${y.default.bold(e)}`));return;case"error":console.log(y.default.redBright(`Swizzle failed for ${y.default.bold(e)}`));return;default:return}},s=()=>{let l=[];l.push(y.default.dim(`File${t.length>1?"s":""} created:`)),l.push(t.map(([u,v])=>v===E.SUCCESS?y.default.cyanBright.dim(` - ${i(u)}`):v===E.TARGET_ALREADY_EXISTS?y.default.cyanBright.dim(` - ${y.default.yellowBright.bold("[FILE_ALREADY_EXISTS] ")}${i(u)}`):v===E.SOURCE_PATH_NOT_A_FILE?y.default.cyanBright.dim(` - ${y.default.yellowBright.bold("[SOURCE NOT FOUND] ")}${i(u)}`):y.default.cyanBright.dim(` - ${y.default.yellowBright.bold(`[${v}]`)}${i(u)}`)).join(`
`)),console.log(l.join(`
`))},g=()=>{r&&n!=="error"&&console.log(we((0,cr.default)(`
${r}`)))};console.log(""),c(),s(),console.log(""),g()};var mr=e=>{let t=/(\/\/|\/\*)(\s?)swizzle-remove-start([\s\S]*?)(\/\/|\/\*)(\s?)swizzle-remove-end(\s*)(\*\/)?/g;return e.replace(t,"")};var vr=a(require("boxen"));var pr=()=>{let e;try{e=h()}catch{e=void 0}return yt(e)};var dr=a(require("inquirer")),ur=a(require("chalk"));var fr=async e=>{await Ko(e)?await ce(e):await Go(e)},Ko=async e=>{let t=`This component requires following packages to be installed:
`.concat(e.map(o=>` - ${o}`).join(`
`)).concat(`
Do you want to install them?`),{installRequiredPackages:r}=await dr.default.prompt([{type:"confirm",name:"installRequiredPackages",default:!0,message:t}]);return r},Go=async e=>{let t=await C(),r=F[t.name].install.join(" "),o=e.join(" "),n=`${t.name} ${r} ${o}`;console.log(`
You can install them manually by running this command:`),console.log(ur.default.bold.blueBright(n))};var Zo=e=>e.command("swizzle").description(`Export a component or a function from ${M.default.bold("refine")} packages to customize it in your project`).action(Qo),gr=e=>(t,r="")=>e.filter(n=>{var i;return n.label.toLowerCase().includes(r.toLowerCase())||((i=n.group)==null?void 0:i.toLowerCase().includes(r.toLowerCase()))}).flatMap((n,i,c)=>{var l;return[...(n==null?void 0:n.group)&&((l=c[i-1])==null?void 0:l.group)!==n.group&&n.group?[new re.default.Separator(M.default.bold(n.group))]:[],{name:` ${n.label}`,value:n!=null&&n.value?n.value:n}]}),Qo=async e=>{var u,v,P;re.default.registerPrompt("autocomplete",hr.default);let t=await Z(),r=[];if(await Promise.all(t.map(async d=>{let m=await ot(d.path),p=r.findIndex(f=>f.name===d.name)===-1;m&&p&&r.push(d)})),r.length===0){console.log("No refine packages found with swizzle configuration.");return}console.log(`${(0,vr.default)(`Found ${M.default.blueBright(r.length)} installed ${M.default.blueBright.bold("refine")} packages with swizzle configuration.`,{padding:1,textAlignment:"center",dimBorder:!0,borderColor:"blueBright",borderStyle:"round"})}
`);let o=await Promise.all(r.map(async d=>{let m=await qe(d.path,!0)??await qe(d.path,!1)??{swizzle:{items:[]}};return{...d,config:m}})),{selectedPackage:n}=await re.default.prompt([{type:"autocomplete",pageSize:10,name:"selectedPackage",message:"Which package do you want to swizzle?",emptyText:"No packages found.",source:gr(o.sort((d,m)=>{var p,f;return(((p=d.config)==null?void 0:p.group)??"").localeCompare(((f=m.config)==null?void 0:f.group)??"")}).map(d=>{var m,p;return{label:((m=d.config)==null?void 0:m.name)??d.name,value:d,group:(p=d.config)==null?void 0:p.group}}))}]),{swizzle:{items:i,transform:c}}=n.config,s;if(i.length===0){console.log(`No swizzle items found for ${M.default.bold(((u=n.config)==null?void 0:u.name)??n.name)}`);return}if(i.length===1?s=i[0]:i.length>1&&(s=(await re.default.prompt([{type:"list",pageSize:10,name:"selectedComponent",message:"Which component do you want to swizzle?",emptyText:"No components found.",choices:gr(i.sort((m,p)=>m.group.localeCompare(p.group)))({},"")}])).selectedComponent),!s){console.log(`No swizzle items selected for ${M.default.bold(((v=n.config)==null?void 0:v.name)??n.name)}`);return}let g=pr(),l=await Promise.all(s.files.map(async d=>{var m;try{let p=d.src?Ye.default.join(n.path,d.src):void 0,f=d.dest?Ye.default.join(process.cwd(),g,d.dest):void 0;if(!p)return console.log("No src path found for file",d),["",E.SOURCE_PATH_NOT_FOUND];if(!f)return console.log("No destination path found for file",d),["",E.TARGET_PATH_NOT_FOUND];if(!await(0,D.pathExists)(p))return[f,E.SOURCE_PATH_NOT_A_FILE];let x=await(0,D.readFile)(p,"utf-8");if(await(0,D.pathExists)(f))return[f,E.TARGET_ALREADY_EXISTS];await(0,D.ensureFile)(f);let N=mr(x),be=((m=d.transform)==null?void 0:m.call(d,N))??N,ke=(c==null?void 0:c(be,p,f))??be,Zr=Ht(ke),Qr=await je(Zr);return await(0,D.writeFile)(f,Qr),[f,E.SUCCESS]}catch{return["",E.UNKNOWN_ERROR]}}));l.length>0&&(lr({files:l,label:s.label,message:s.message}),(P=s==null?void 0:s.requiredPackages)!=null&&P.length&&await fr(s.requiredPackages))},wr=Zo;var xr=require("commander");var H=a(require("inquirer")),Xe=a(require("semver-diff")),ye=a(require("chalk"));var yr=e=>{let t=e.filter((o,n)=>e.indexOf(o)!==n),r=new Set(t);return Array.from(r)};var Pr=async e=>{let t=tn(e);if(!t){console.log("All `refine` packages are up to date. \u{1F389}");return}let r=rn(t),o=await H.default.prompt([{type:"checkbox",name:"packages",message:"Choose packages to update",pageSize:r.pageSize,choices:r.choices,validate:en}]);return o.packages.length>0?o.packages:null},en=e=>{let r=e.map(n=>nt(n)).map(n=>n.name),o=yr(r);return o.length>0?`You can't update the same package more than once. Please choice one.
 Duplicates: ${o.join(", ")}`:!0},tn=e=>{if(e.length===0)return null;let t={patch:[],minor:[],major:[]};return e.forEach(r=>{let o=r.current,n=(0,Xe.default)(o,r.wanted),i=(0,Xe.default)(o,r.latest);if(n===i&&i){t[i].push({name:r.name,from:o,to:r.latest});return}n&&t[n].push({name:r.name,from:o,to:r.wanted}),i&&t[i].push({name:r.name,from:o,to:r.latest})}),t},rn=e=>{let t=0,r=0;[e.patch,e.minor,e.major].forEach(l=>{l.forEach(u=>{u.name.length>t&&(t=u.name.length),u.from.length>r&&(r=u.from.length)})}),t+=2;let o=[],n="Package".padEnd(t),i="From".padEnd(r),s=`
   ${n} ${i}${"To".padStart(r)}`;o.push(new H.default.Separator(s)),e.patch.length>0&&(o.push(new H.default.Separator(ye.default.reset.bold.blue(`
Patch Updates`))),e.patch.forEach(l=>{o.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})})),e.minor.length>0&&(o.push(new H.default.Separator(ye.default.reset.bold.blue(`
Minor Updates`))),e.minor.forEach(l=>{o.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})})),e.major.length>0&&(o.push(new H.default.Separator(ye.default.reset.bold.blue(`
Major Updates`))),e.major.forEach(l=>{o.push({name:`${l.name.padEnd(t)} ${l.from.padStart(r)} -> ${l.to}`,value:`${l.name}@${l.to}`})}));let g=o.length+6;return{choices:o,pageSize:g}};var on=e=>e.command("update").description("Interactively select and update all `refine` packages to selected version. To skip the interactive mode, use the `--all` option.").addOption(new xr.Option("-t, --tag [tag]","Select version to update to.").choices(["next","latest"]).default("wanted","Version ranges in the `package.json` will be installed")).option("-a, --all","Update all `refine` packages to the selected `tag`. If `tag` is not provided, version ranges in the `package.json` will be installed. This option skips the interactive mode.",!1).option("-d, --dry-run","Get outdated packages installation command without automatic updating. If `tag` is not provided, version ranges in the `package.json` will be used.",!1).action(nn),nn=async e=>{let{tag:t,dryRun:r,all:o}=e,n=await j(ee,"Checking for updates...");if(!(n!=null&&n.length)){console.log("All `refine` packages are up to date \u{1F389}");return}let i=o?sn(t,n):await Pr(n);if(i){if(r){an(i);return}cn(i)}},sn=(e,t)=>e==="wanted"&&t.every(n=>n.current===n.wanted)?(console.log("All `refine` packages are up to date with the wanted version \u{1F389}"),null):t.map(o=>{let n=e==="wanted"?o.wanted:e;return`${o.name}@${n}`}),an=async e=>{let t=await C(),r=F[t.name].install;console.log(`${t.name} ${r.join(" ")} ${e.join(" ")}`)},cn=e=>{console.log("Updating `refine` packages..."),console.log(e),ce(e)},Ir=on;var Er=a(require("envinfo")),Cr=a(require("ora")),ln=e=>e.command("whoami").description("View the details of the development environment").action(mn),mn=async()=>{let e=(0,Cr.default)("Loading environment details...").start(),t=await Er.default.run({System:["OS","CPU"],Binaries:["Node","Yarn","npm"],Browsers:["Chrome","Firefox","Safari"]},{showNotFound:!0,markdown:!0}),o=(await V()||[]).map(n=>` - ${n.name}: ${n.version}`).join(`
`);e.stop(),console.log(t),console.log("## Refine Packages:"),console.log(o)},Rr=ln;var ne=a(require("chalk")),ie=a(require("inquirer"));var Ar=a(require("inquirer"));var br=a(require("execa")),Pe=async e=>{let{incompatiblePackages:t,integrationName:r,requiredPackages:o,transformerFileName:n}=e;if(at(t))return;await st(o),console.log(`\u{1F680} Setting up ${r}...`);let i=require.resolve(".bin/jscodeshift"),{stderr:c}=br.default.sync(i,["./","--extensions=ts,tsx,js,jsx","--parser=tsx",`--transform=${__dirname}/../src/transformers/integrations/${n}.ts`,"--ignore-pattern=.cache","--ignore-pattern=node_modules","--ignore-pattern=build","--ignore-pattern=.next","--ignore-pattern=dist"]);c&&console.log(c),console.log(`\u{1F389} ${r} setup completed!`)};var xe=a(require("chalk")),Ie=e=>{let{id:t,title:r,description:o,disabled:n}=e;return n?{value:t,name:`${xe.default.gray(r)}`,disabled:xe.default.redBright(n)}:{value:t,name:`${xe.default.blueBright(r)} - ${o}`}};var kr="ant-design",pn="Ant Design",dn=["@remix-run/react","next"],un=["antd","@refinedev/antd"],fn="ant-design",Nr={id:kr,getChoice:e=>{let t="Ant Design",r="Setup Ant Design with Refine",o;return["nextjs","remix"].includes(e)&&(o="Automatic setup only available Vite for now. See the documentation for manual installation: https://refine.dev/docs/ui-integrations/ant-design/introduction/#installation"),Ie({id:kr,title:t,description:r,disabled:o})},runTransformer:async()=>await Pe({incompatiblePackages:dn,integrationName:pn,requiredPackages:un,transformerFileName:fn})};var Tr="react-router",gn="React Router",hn=["@remix-run/react","next"],vn=["react-router-dom","@refinedev/react-router-v6"],wn="react-router",Sr={id:Tr,getChoice:e=>{let t="React Router",r="Setup routing with React Router",o;return e==="nextjs"&&(o="Can't be used with Next.js. https://nextjs.org/docs/app/building-your-application/routing"),e==="remix"&&(o="Can't be used with Remix. https://remix.run/docs/en/main/discussion/routes"),Ie({id:Tr,title:t,description:r,disabled:o})},runTransformer:async()=>await Pe({incompatiblePackages:hn,integrationName:gn,requiredPackages:vn,transformerFileName:wn})};var L=[Nr,Sr];var Je=()=>{let e=h(),t=L.map(r=>r.getChoice(e));return t.every(r=>r.disabled)?[{value:"none",name:"No integration available for this project type."},...t]:t},Or=async()=>await Ar.default.prompt([{type:"list",name:"id",message:"Which integration do you want to add?",choices:Je(),default:"none"}]);var Dr=a(require("chalk")),jr=a(require("inquirer"));var G=require("fs-extra"),He=require("path");var K=[{id:"auth",title:"Auth provider",description:"Manage user authentication and authorization",fileName:"auth-provider.tsx",templateFileName:"demo-auth-provider.tsx"},{id:"live",title:"Live provider",description:"Enable real-time updates and synchronization",fileName:"live-provider.tsx",templateFileName:"demo-live-provider.tsx"},{id:"data",title:"Data provider",description:"Communicate with your API",fileName:"data-provider.tsx",templateFileName:"demo-data-provider.tsx"},{id:"access-control",title:"Access Control",description:"Manage user permissions & roles",fileName:"access-control-provider.tsx",templateFileName:"demo-access-control-provider.tsx"},{id:"notification",title:"Notification provider",description:"Display in-app alerts and messages",fileName:"notification-provider.tsx",templateFileName:"demo-notification-provider.tsx"},{id:"i18n",title:"I18n provider",description:"Support multiple languages and locales",fileName:"i18n-provider.tsx",templateFileName:"demo-i18n-provider.tsx"},{id:"audit-log",title:"Audit Log provider",description:"Display audit logs for your resources",fileName:"audit-log-provider.tsx",templateFileName:"demo-audit-log-provider.tsx"}];var yn=`${__dirname}/../templates/provider`,oe=(e,t)=>{e.forEach(r=>{let{fileName:o,templateFileName:n}=Pn(r),i=t??Ke(),c=(0,He.join)(i,o),s=(0,He.join)(process.cwd(),i,o);if((0,G.pathExistsSync)(s)){console.error(`\u274C Provider (${c}) already exist!`);return}(0,G.mkdirSync)(i,{recursive:!0}),(0,G.copySync)(`${yn}/${n}`,s),console.log(`\u{1F389} Provider (${c}) created successfully!`)})},Pn=e=>{let t=K.find(r=>r.id===e);if(!t)throw new Error(`Invalid provider: ${e}`);return t},Ke=()=>{let e=h(),{path:t}=wt(e);return t};var Ge=()=>K.map(e=>{let{id:t,title:r,description:o}=e;return{value:t,name:`${Dr.default.blueBright(r)} - ${o}`}}),_r=async()=>await jr.default.prompt([{type:"checkbox",name:"providers",message:"Which providers do you want to add?",choices:Ge()},{type:"input",name:"providersPath",message:"Where do you want to generate the providers?",default:Ke()}]);var $r=(e,t)=>t.map(r=>({...r,name:` . ${r.name}`,value:{group:e,component:r.value}})),Fr=async()=>await ie.default.prompt([{type:"list",name:"component",message:"What do you want to add?",choices:[new ie.default.Separator(ne.default.bold("Provider")),...$r("provider",Ge()),new ie.default.Separator(ne.default.bold("Integration")),...$r("integration",Je()),new ie.default.Separator(ne.default.bold("Resource")),{name:ne.default.blueBright(" .  Add new resource"),value:{group:"resource",component:"resource"}}],pageSize:25}]);var Ee=require("commander");var xn=async e=>{let t=e;t||(t=(await Or()).id);let r=L.find(o=>o.id===t);r&&await r.runTransformer()},Ur=new Ee.Command("integration").addArgument(new Ee.Argument("[name]","Name of the integration").choices(L.map(e=>e.id))).action(xn);var Ce=require("commander");var In=async(e,t)=>{if(!e.length){let{providers:r,providersPath:o}=await _r();return oe(r,o)}oe(e,t.path)},Br=new Ce.Command("provider").addArgument(new Ce.Argument("[providers...]","Create provider(s)").choices(K.map(e=>e.id)).default([])).option("-p, --path [path]","Path to generate providers").action(In);var Re=require("commander");var En=async(e,t,r)=>{W({actions:t==null?void 0:t.actions,path:r.optsWithGlobals().path},e)},Mr=new Re.Command("resource").addArgument(new Re.Argument("[resources...]","Create new resource(s)")).option("-p, --path [path]","Path to generated resource files").option("-a, --actions [actions]","Only generate the specified resource actions. (ex: list,create,edit,show)","list,create,edit,show").action(En);var Cn=e=>e.command("add").description("Add new resources, providers, or integrations").allowExcessArguments(!1).action(Rn).addCommand(Mr).addCommand(Br).addCommand(Ur),Rn=async()=>{let{component:e}=await Fr();if(e.group==="provider"&&oe([e.component]),e.group==="integration"){let t=L.find(r=>r.id===e.component);await(t==null?void 0:t.runTransformer())}e.group==="resource"&&await W({},[])},Lr=Cn;var zr=a(require("envinfo")),Vr=a(require("os")),bn=()=>{let e=Vr.default.type();return{Darwin:"macOS",Linux:"Linux",Windows_NT:"Windows"}[e]},Wr=async()=>{let[e,t]=await zr.default.helpers.getOSInfo();return{name:bn(),version:t}};var qr=a(require("node-fetch")),kn=async()=>{let e=await Wr();return{nodeEnv:b.NODE_ENV,nodeVersion:process.version,os:e.name,osVersion:e.version,command:process.argv[2],packages:await V()||[],projectFramework:h(),projectId:it()}},Yr=async()=>{if(b.REFINE_NO_TELEMETRY!=="true")try{let e=await kn();await(0,qr.default)("https://telemetry.refine.dev/cli",{method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})}catch{}};var Xr=a(require("gray-matter")),Jr=a(require("boxen"));var Nn="https://raw.githubusercontent.com/refinedev/refine/master/packages/cli/ANNOUNCEMENTS.md",Ze="---announcement",Tn=e=>e.split(Ze).slice(1).map(r=>`${Ze}${r}`),Sn=e=>{let t=e.replace(Ze,"---"),r=(0,Xr.default)(t),o=(r.content.length===0?t.replace(/---/g,""):r.content.replace(/---/g,"")).trim();return{...r.data,content:o}},An=async()=>{try{let e=await fetch(Nn).then(r=>r.text()).catch(()=>"");return Tn(e).map(r=>Sn(r))}catch{return[]}},Hr=async()=>{let t=(await An()).filter(o=>!o.hidden);if(t.length===0)return;let r=t.map(o=>{let n=t.length>1?"\u2014 ":"",i=we(o.content);return`${n}${i}`}).join("").trim();console.log((0,Jr.default)(r,{padding:1,margin:0,borderStyle:"round",borderColor:"blueBright",titleAlignment:"left"}))};var On="1.0.0",Dn=()=>{let e=new Kr.Command;e.version(`@refinedev/cli@${On}`,"-v, --version","Output the current version.").description(Gr.default.textSync("refine",{font:"Isometric1",horizontalLayout:"full",verticalLayout:"full",whitespaceBreak:!0})).usage("<command> [options]").helpOption("-h, --help","Output usage information."),wr(e),Ct(e),Ir(e),Be(e),Me(e),De(e),ze(e),gt(e),Rr(e),kt(e),qt(e),Lr(e),e.hook("preAction",async t=>{t.args.includes("dev")&&await Hr()}),e.hook("postAction",t=>{let r=t.args[0];["run"].includes(r)||Yr()}),e.parse(process.argv),process.argv.slice(2).length||e.outputHelp()};Dn();
//# sourceMappingURL=cli.cjs.map